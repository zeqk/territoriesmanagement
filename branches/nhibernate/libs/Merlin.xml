<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Merlin</name>
    </assembly>
    <members>
        <member name="T:Merlin.TemplateStep">
            <summary>
            A blank step around a provided UI. Can be extended by inheritence
            and by composition by providing handler and button enablement strategy
            delegates.
            </summary>
        </member>
        <member name="T:Merlin.IStep">
            <summary>
            Defines the minimum requirements for a  "step" that can be displayed by the 
            WizardController. Consider inheriting from TemplateStep rather 
            than implementing manually.
            </summary>
        </member>
        <member name="M:Merlin.IStep.StepReached">
            <summary>
            Executes every time this step is reached.
            </summary>
        </member>
        <member name="M:Merlin.IStep.OnNext">
            <summary>
            Occurs when the user clicks the next button.
            Returns true if the current state permits to advance
            to the next screen.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Merlin.IStep.OnPrevious">
            <summary>
            Occurs when the user clicks the previous button.
            Returns true if the current state permits to return
            to the previous screen.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Merlin.IStep.OnCancel">
            <summary>
            Occurs when the user clicks the cancel button.
            </summary>
        </member>
        <member name="M:Merlin.IStep.AllowNext">
            <summary>
            True when the state of the step makes it 
            permissible for the "Next" button to be clicked.
            For example, a settings step would have this 
            method return true when all fields are populated
            with legitimate values.
            </summary>
        </member>
        <member name="M:Merlin.IStep.AllowPrevious">
            <summary>
            True when it is permissible for the previous
            button to be clicked.
            </summary>
        </member>
        <member name="M:Merlin.IStep.AllowCancel">
            <summary>
            True when it is permissible for the Cancel button
            to be clicked. This property should always return true,
            except under extreme circumstances when aborting the wizard
            would somehow create an inconsistent state.
            </summary>
        </member>
        <member name="P:Merlin.IStep.Title">
            <summary>
            Returns the user-facing title of this step.
            </summary>
        </member>
        <member name="P:Merlin.IStep.Subtitle">
            <summary>
            Returns the user-facing subtitle of this step. If the subtitle is not 
            null or empty, it appears beneath the title in the header section of the wizard
            </summary>
        </member>
        <member name="E:Merlin.IStep.StepStateChanged">
            <summary>
            Occurs when the state of the component is changed.
            </summary>
        </member>
        <member name="P:Merlin.IStep.UI">
            <summary>
            The control that is displayed in the wizard when this
            step is reached.
            </summary>
        </member>
        <member name="M:Merlin.TemplateStep.#ctor(System.Windows.Forms.Control)">
            <summary>
            Creates a new TemplateStep.
            </summary>
            <param name="ui"></param>
        </member>
        <member name="M:Merlin.TemplateStep.#ctor">
            <summary>
            Empty constructor for use when the inheriting class will provide a UI
            at a later time (typically later in the constructor). If a UI has not
            been provided by the time the step is reached, a MissingUIException
            will be thrown
            </summary>
        </member>
        <member name="M:Merlin.TemplateStep.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            Creates a new template step
            </summary>
            <param name="ui"></param>
            <param name="title">The title of the new step.</param>
        </member>
        <member name="M:Merlin.TemplateStep.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Padding)">
            <summary>
            Creates a new template step with margins around the UI.
            </summary>
            <param name="ui"></param>
            <param name="margins"></param>
        </member>
        <member name="M:Merlin.TemplateStep.#ctor(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Creates a new template step with margins around the UI.
            </summary>
            <param name="ui"></param>
            <param name="margins"></param>
        </member>
        <member name="M:Merlin.TemplateStep.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Padding,System.String)">
            <summary>
            Creates a new template step with the provided margins and title
            </summary>
            <param name="ui"></param>
            <param name="margins"></param>
            <param name="title"></param>
        </member>
        <member name="M:Merlin.TemplateStep.StateUpdated">
            <summary>
            A shortcut to firing the StepStateChanged event.
            </summary>
        </member>
        <member name="P:Merlin.TemplateStep.Title">
            <summary>
            The title of the step that will appear in the titlebar.
            </summary>
        </member>
        <member name="P:Merlin.TemplateStep.Subtitle">
            <summary>
            Gets or sets the user-facing subtitle of this step. If the subtitle is not 
            null or empty, it appears beneath the title in the header section of the wizard
            </summary>
        </member>
        <member name="P:Merlin.TemplateStep.StepReachedHandler">
            <summary>
            Gets and sets the handler that executes when the step is reached
            </summary>
        </member>
        <member name="P:Merlin.TemplateStep.NextHandler">
            <summary>
            Gets and sets the handler that executes when the Next button is clicked.
            </summary>
        </member>
        <member name="P:Merlin.TemplateStep.PreviousHandler">
            <summary>
            Gets and sets the handler that executes when the Previous button is clicked.
            </summary>
        </member>
        <member name="P:Merlin.TemplateStep.CancelHandler">
            <summary>
            Gets and sets the handler that executes when the Cancel button is clicked.
            </summary>
        </member>
        <member name="P:Merlin.TemplateStep.AllowNextStrategy">
            <summary>
            A boolean function to determine whether the "Next" button is enabled.
            </summary>
        </member>
        <member name="P:Merlin.TemplateStep.AllowPreviousStrategy">
            <summary>
            A boolean function to determine whether the "Previous" button is enabled.
            </summary>
        </member>
        <member name="P:Merlin.TemplateStep.AllowCancelStrategy">
            <summary>
            A boolean function to determine whether the "Cancel" button is enabled.
            </summary>
        </member>
        <member name="T:Merlin.TemplateStep.VoidDelegate">
            <summary>
            A delegate for a void function with no arguments
            </summary>
        </member>
        <member name="T:Merlin.TemplateStep.BoolDelegate">
            <summary>
            A delegate for a function with no arguments that returns a boolean.
            </summary>
        </member>
        <member name="T:Merlin.TemplateStep.MissingUIException">
            <summary>
            Thrown if an inheriting class has not provided a UI by the time the
            step has been reached.
            </summary>
        </member>
        <member name="T:Merlin.ConditionalStepAtEndException">
            <summary>
            Thrown when a conditional step is found at the end of a step sequence.
            </summary>
        </member>
        <member name="M:Merlin.ConditionalStepAtEndException.#ctor">
            <summary>
            Creates a new instance of ConditionalStepAtEndException
            </summary>
        </member>
        <member name="F:Merlin.WizardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Merlin.WizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Merlin.WizardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Merlin.WizardForm.ShowSubtitle(System.String)">
            <summary>
            Shows the specified subtitle underneath the header title
            </summary>
            <param name="subtitleText"></param>
        </member>
        <member name="T:Merlin.EmptyStepSequenceException">
            <summary>
            Thrown when the step sequence provided to the
            wizard controller contains no steps.
            </summary>
        </member>
        <member name="M:Merlin.EmptyStepSequenceException.#ctor">
            <summary>
            Creates a new instance of EmptyStepSequenceException
            </summary>
        </member>
        <member name="T:Merlin.WizardController">
            <summary>
            This is the executor of the wizard. It performs step sequence
            traversal and navigation.
            </summary>
        </member>
        <member name="M:Merlin.WizardController.#ctor(System.Collections.Generic.List{Merlin.IStep})">
            <summary>
            Creates a new wizard controller.
            </summary>
            <param name="steps">
            The list of steps of the wizard.
            </param>
        </member>
        <member name="M:Merlin.WizardController.StartWizard(System.String)">
            <summary>
            Starts the wizard.
            </summary>
            <param name="windowName">Text that appears in the title bar of the wizard window.</param>
            <returns>Whether the wizard was aborted, failed, or ran to completion.</returns>
        </member>
        <member name="M:Merlin.WizardController.Advance">
            <summary>
            Calls the OnNext() method of the current step and
            advances the wizard to the next step. If the current step
            is the last in the sequence, ends the wizard.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Merlin.WizardController.updateButtonState">
            <summary>
            Enables/disables wizard buttons in accordance with 
            the component's state.
            </summary>
        </member>
        <member name="M:Merlin.WizardController.AddAfterCurrent(System.Collections.Generic.IEnumerable{Merlin.IStep})">
            <summary>
            Adds a sequence of steps after the current step and before
            any steps that already follow the current step.
            </summary>
            <param name="steps"></param>
        </member>
        <member name="M:Merlin.WizardController.AddAfterCurrent(Merlin.IStep)">
            <summary>
            Adds a single step after the current step and before
            any steps that already follow the current step.
            </summary>
            <param name="step"></param>
        </member>
        <member name="M:Merlin.WizardController.DeleteAllAfterCurrent">
            <summary>
            Deletes all steps after the current step.
            </summary>
        </member>
        <member name="M:Merlin.WizardController.DeleteNext">
            <summary>
            Deletes the step immediately following the current step.
            Throws an exception if the current step is the last in the
            step sequence.
            </summary>
        </member>
        <member name="T:Merlin.ConditionalStep">
            <summary>
            This step itself never appears in the wizard.
            Instead, it adds another step if a provided boolean
            function evaluates to true. When the Previous button is clicked,
            this step is skipped over. As a result, a conditional 
            step may only be the first step in the sequence if
            both the next step and the provided step have 
            their "AllowPrevious" returning false. A conditional step
            may not be the last step in a step sequence.
            </summary>
        </member>
        <member name="M:Merlin.ConditionalStep.#ctor(Merlin.ConditionalStep.StepCondition,Merlin.IStep)">
            <summary>
            Creates a ConditionalStep
            </summary>
            <param name="condition">The condition under which the step appears</param>
            <param name="step">The step that appears if the condition is true</param>
        </member>
    </members>
</doc>
